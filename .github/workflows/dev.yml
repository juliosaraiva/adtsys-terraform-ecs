name: Terraform
on:
  pull_request:

env:
  TERRAFORM_VERSION: 0.15.0
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  workspace:
    name: Create Workspace
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: staging
    steps:
    - uses: actions/checkout@v2.1.0
    - uses: hashicorp/setup-terraform@v1
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Select Staging Workspace
      run: terraform workspace select staging
      continue-on-error: true
    - id: check_workspace
      run: terraform workspace show
    - id: output_workspace
      run: echo ::set-output name=key::${{ steps.check_workspace.outputs['stdout'] }}
    - name: Create Staging workspace
      run: terraform workspace new staging
      - if: ${{ steps.output_workspace.outputs['stdout'] != 'staging' }}

  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: workspace
    environment:
      name: staging
    steps:
    - uses: actions/checkout@v2.1.0
    - uses: hashicorp/setup-terraform@v1
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
      
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: format
    environment:
      name: staging
    strategy:
      matrix:
        dir:
          - .
          - modules/networking
          - modules/bastion
          - modules/ecs
          - modules/elb
          - modules/rds
    steps:
      - run: terraform workspace select staging
      - name: Terraform validate
        id: validate
        run: terraform validate ${{ matrix.dir }}
